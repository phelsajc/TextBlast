{"version":3,"file":"js/494.90d5d317.js","mappings":"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","sources":["webpack://app-boilerplate/./src/api/getMyContacts.js","webpack://app-boilerplate/./src/composition/useToast.js","webpack://app-boilerplate/./src/store/station.js","webpack://app-boilerplate/./src/pages/Groups.vue","webpack://app-boilerplate/./src/pages/Groups.vue?bfa7"],"sourcesContent":["import api from './index'\n\nexport default {\n    add(data) {\n        return api.post('saveGroup', data)\n    },\n    get() {\n        return api.get('mycontacts')\n    },\n    list(params) {\n        return api.post('mycontacts', params)\n    },\n    update(data) {\n        return api.patch('mycontacts', data)\n    },\n    delete(id) {\n        return api.get('deleteGroup/'+ id)\n    },\n    getDefault() {\n        return api.get('getDefault')\n    },    \n}","import { toastController } from \"@ionic/vue\";\n\nexport default function () {\n  /**\n   * Shows a notification\n   * @param {string} message\n   * @param {string} color\n   * @param {string} position\n   * @param {number} duration\n   * @returns\n   */\n  async function openToast(message, color, position = \"top\", duration = 3000) {\n    const toast = await toastController.create({\n      message,\n      position,\n      color,\n      duration,\n    });\n\n    return toast.present();\n  }\n\n  return {\n    openToast,\n  };\n}\n","import { defineStore } from 'pinia';\n\nexport const stationStore = defineStore({\n    id: 'stn',\n    state: () => ({\n        alert: null,\n        stn: [],\n    }),\n    actions: {\n        success(message) {\n            this.alert = { message, type: 'alert-success' };\n        },\n        error(message) {\n            this.alert = { message, type: 'alert-danger' };\n        },\n        clear() {\n            this.alert = null;\n        },\n        stations(stn) {\n            this.stn = []\n            this.stn = stn;\n        },\n    },\n    getters: {\n      getStations() {\n        return this.stn\n      },\n    },\n});","<template>\n  <KeepAlive>\n    <base-layout :show-tool-bar-menu=\"true\" color-type=\"secondary\" page-title=\"Groups\">\n      <ion-card>\n        <ion-card-content>\n          <ion-button expand=\"block\" @click=\"redirect()\"\n            ><ion-icon name=\"add-outline\"></ion-icon>Add</ion-button\n          >\n        </ion-card-content>\n      </ion-card>\n      <ion-list lines=\"full\">\n        <ion-card v-for=\"e in Contact_list\">\n          <ion-card-header>\n            <ion-card-subtitle v-if=\"e.row_status == 1\"\n              ><ion-badge color=\"primary\">Active</ion-badge></ion-card-subtitle\n            >\n            <ion-card-subtitle v-else=\"e.row_status == 1\"\n              ><ion-badge color=\"danger\">Inactive</ion-badge></ion-card-subtitle\n            >\n            <ion-card-title>{{ e.group_descr }}</ion-card-title>\n          </ion-card-header>\n\n          <ion-card-content>\n            {{ e.group_numbers }}\n            <ion-grid>\n              <ion-row>\n                <ion-col\n                  ><ion-button\n                    expand=\"block\"\n                    color=\"danger\"\n                    fill=\"outline\"\n                    @click=\"deleteGrp(e)\"\n                    ><ion-icon name=\"trash-outline\"></ion-icon>Delete</ion-button\n                  ></ion-col\n                >\n                <ion-col\n                  ><ion-button expand=\"block\" color=\"success\" fill=\"outline\"\n                    @click=\"editGrp(e)\"\n                    ><ion-icon name=\"create-outline\"></ion-icon>Edit</ion-button\n                  ></ion-col\n                >\n              </ion-row>\n            </ion-grid>\n          </ion-card-content>\n        </ion-card>\n      </ion-list>\n    </base-layout>\n  </KeepAlive>\n</template>\n\n<script>\nimport { ref, onMounted, onIonViewDidEnter, computed } from \"vue\";\nimport Contacts from \"@/api/getMyContacts\";\nimport { defineStore } from \"pinia\";\nimport { stationStore } from \"../store/station\";\nimport { useRouter } from \"vue-router\";\nimport useToast from \"../composition/useToast\";\nimport { Preferences } from \"@capacitor/preferences\";\nimport { useUserStore } from \"../store/user\";\nimport emitter from \"../plugins/emitter\";\nimport { IonButton, alertController } from \"@ionic/vue\";\nimport {\n  loadingController,\n} from '@ionic/vue';\n\n\nexport default {\n  setup() {\n    const Contact_list = ref([]);\n    const stnVal = ref([]);\n    const stnInput = ref([]);\n    const stnStore = stationStore();\n    const censusResults = computed(() => stnStore.getStations);\n    const isScheduled = ref(false);\n    const form = ref({\n      date: null,\n      receiver: null,\n      template: null,\n      message: null,\n    });\n    const { openToast } = useToast();\n\n    const userStore = useUserStore();\n    const format = (date) => {\n      const day = date.getDate();\n      const month = date.getMonth() + 1;\n      const year = date.getFullYear();\n      return `Selected date is ${day}/${month}/${year}`;\n    };\n\n    onMounted(async () => {\n      showLoading();\n      await loadContacts();\n    });\n    \n    async function showLoading() {\n      const load = await loadingController.create({\n        message: 'Loading...',\n        backdropDismiss: true,\n        spinner: 'circles'\n      });\n      load.present();\n    }\n\n    const dismissLoading = async () => {\n      await loadingController.dismiss()\n    }\n\n    const router = useRouter();\n\n    function redirect() {\n      router.push({\n        name: \"Manage-group\",\n        params: {\n          propKey: JSON.stringify(form),\n        },\n      });\n    }\n\n    function loadContacts() {\n      Contacts.get()\n        .then((response) => {\n          Contact_list.value = [];\n          response.data.data.forEach((element) => {\n            Contact_list.value.push(element);\n          });\n          dismissLoading()\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n        .finally();\n    }\n    \n    async function deleteGrp(e) {\n      return new Promise(async (resolve) => {\n        const confirm = await alertController.create({\n          header: \"Delete Group\",\n          message: e.group_descr,\n          buttons: [\n            {\n              text: \"Cancel\",\n              role: \"cancel\",\n              handler: () => {\n                return resolve(false);\n              },\n            },\n            {\n              text: \"OK\",\n              handler: () => {\n                Contacts.delete(e.my_group_id)\n                  .then((response) => {\n                    loadContacts();\n                  })\n                  .catch((err) => {\n                    console.log(err);\n                  })\n                  .finally();\n                return resolve(true);\n              },\n            },\n          ],\n        });\n\n        await confirm.present();\n      });\n    }\n\n    \n    async function editGrp(e) {\n      router.push({\n        name: \"Manage-group\",\n        params: {\n          propKey: JSON.stringify(e),\n        },\n      });\n    }\n    return {\n      redirect,\n      Contact_list,\n      stnVal,\n      loadContacts,\n      form,\n      deleteGrp,\n      editGrp,\n      censusResults,\n      showLoading,\n      dismissLoading,\n    };\n  },\n};\n</script>\n\n<style>\nion-list {\n  overflow: hidden;\n  overflow-y: auto;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n}\n\nion-card .list-md {\n  max-height: 290px !important;\n}\n</style>\n","import { render } from \"./Groups.vue?vue&type=template&id=146d963a\"\nimport script from \"./Groups.vue?vue&type=script&lang=js\"\nexport * from \"./Groups.vue?vue&type=script&lang=js\"\n\nimport \"./Groups.vue?vue&type=style&index=0&id=146d963a&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["add","data","api","post","get","list","params","update","patch","delete","id","getDefault","async","openToast","message","color","position","duration","toast","toastController","create","present","stationStore","defineStore","state","alert","stn","actions","success","this","type","error","clear","stations","getters","getStations","_createBlock","_KeepAlive","_createVNode","_component_base_layout","_component_ion_card","_component_ion_card_content","_component_ion_button","expand","onClick","_cache","$event","$setup","redirect","_component_ion_icon","name","_component_ion_list","lines","_createElementBlock","_Fragment","_renderList","Contact_list","e","_component_ion_card_header","row_status","_component_ion_card_subtitle","key","_component_ion_badge","_component_ion_card_title","group_descr","group_numbers","_component_ion_grid","_component_ion_row","_component_ion_col","fill","deleteGrp","editGrp","setup","ref","stnVal","stnStore","censusResults","computed","form","date","receiver","template","useToast","useUserStore","showLoading","load","loadingController","backdropDismiss","spinner","onMounted","loadContacts","dismissLoading","dismiss","router","useRouter","push","propKey","JSON","stringify","Contacts","then","response","value","forEach","element","catch","err","console","log","finally","Promise","confirm","alertController","header","buttons","text","role","handler","resolve","my_group_id","__exports__","render"],"sourceRoot":""}